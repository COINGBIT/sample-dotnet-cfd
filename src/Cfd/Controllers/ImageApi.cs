/*
 * Continous Food Delievery
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Cfd.Attributes;
using Cfd.Models;
using System.IO;

namespace Cfd.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ImageApiController : ControllerBase
    {

        private readonly CfdContext _context;

        public ImageApiController(CfdContext context)
        {
            _context = context;
        }

        /// <summary>
        /// Add an image to the restaraunt
        /// </summary>
        /// <remarks>Creates an image. Duplicates are allowed. Returns the image id</remarks>
        /// <param name="IFormFile"></param>
        /// <response code="200">OK</response>
        [HttpPost]
        [Route("/CFD/1.0.0/image")]
        [Consumes("multipart/form-data")]
        [ValidateModelState]
        [SwaggerOperation("AddImage")]
        [SwaggerResponse(statusCode: 200, type: typeof(InlineResponse200), description: "OK")]
        public virtual IActionResult AddImage([FromRoute(Name = "fileName")][Required] IFormFile file)
        {

            Image img = new Image();
            img.Add(file.FileName);

            _context.Images.Add(img);
            _context.SaveChanges();

            return CreatedAtAction("AddImage", img);
        }

        /// <summary>
        /// Remove image
        /// </summary>
        /// <remarks>The imageId must exist </remarks>
        /// <param name="imageId">The imageId to delete</param>
        /// <response code="201">Null response</response>
        /// <response code="0">unexpected error</response>
        [HttpDelete]
        [Route("/CFD/1.0.0/image/{imageId}")]
        [ValidateModelState]
        [SwaggerOperation("DeleteImage")]
        [SwaggerResponse(statusCode: 0, type: typeof(Error), description: "unexpected error")]
        public virtual IActionResult DeleteImage([FromRoute (Name = "imageId")][Required]int imageId)
        { 

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201);
            //TODO: Uncomment the next line to return response 0 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(0, default(Error));

            throw new NotImplementedException();
        }

        /// <summary>
        /// Get image
        /// </summary>
        /// <remarks>Returns the image as image/png </remarks>
        /// <param name="imageId">The imageId of the image to retrieve</param>
        /// <response code="200">image</response>
        [HttpGet]
        [Route("/CFD/1.0.0/image/{imageId}")]
        [ValidateModelState]
        [SwaggerOperation("GetImage")]
        [SwaggerResponse(statusCode: 200, type: typeof(System.IO.Stream), description: "image")]
        public virtual IActionResult GetImage([FromRoute (Name = "imageId")][Required]int imageId)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(System.IO.Stream));
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<System.IO.Stream>(exampleJson)
            : default(System.IO.Stream);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
